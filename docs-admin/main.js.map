{"version":3,"sources":["./apps/admin/$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./apps/admin/src/app/app-routing.module.ts","./apps/admin/src/app/app.component.ts","./apps/admin/src/app/app.component.html","./apps/admin/src/app/app.module.ts","./apps/admin/src/app/pages/categories/categories-form/categories-form.component.ts","./apps/admin/src/app/pages/categories/categories-form/categories-form.component.html","./apps/admin/src/app/pages/categories/categories-list/categories-list.component.ts","./apps/admin/src/app/pages/categories/categories-list/categories-list.component.html","./apps/admin/src/app/pages/dashboard/dashboard.component.ts","./apps/admin/src/app/pages/dashboard/dashboard.component.html","./apps/admin/src/app/pages/orders/orders-detail/orders-detail.component.ts","./apps/admin/src/app/pages/orders/orders-detail/orders-detail.component.html","./apps/admin/src/app/pages/orders/orders-list/orders-list.component.ts","./apps/admin/src/app/pages/orders/orders-list/orders-list.component.html","./apps/admin/src/app/pages/products/products-form/products-form.component.ts","./apps/admin/src/app/pages/products/products-form/products-form.component.html","./apps/admin/src/app/pages/products/products-list/products-list.component.ts","./apps/admin/src/app/pages/products/products-list/products-list.component.html","./apps/admin/src/app/pages/users/users-form/users-form.component.ts","./apps/admin/src/app/pages/users/users-form/users-form.component.html","./apps/admin/src/app/pages/users/users-list/users-list.component.ts","./apps/admin/src/app/pages/users/users-list/users-list.component.html","./apps/admin/src/app/shared/shell/shell.component.ts","./apps/admin/src/app/shared/shell/shell.component.html","./apps/admin/src/app/shared/sidebar/sidebar.component.ts","./apps/admin/src/app/shared/sidebar/sidebar.component.html","./apps/admin/src/main.ts","./environments/environment.ts","./libs/orders/src/index.ts","./libs/orders/src/lib/components/cart-icon/cart-icon.component.ts","./libs/orders/src/lib/components/cart-icon/cart-icon.component.html","./libs/orders/src/lib/components/order-summary/order-summary.component.ts","./libs/orders/src/lib/components/order-summary/order-summary.component.html","./libs/orders/src/lib/models/cart.ts","./libs/orders/src/lib/models/order-item.ts","./libs/orders/src/lib/models/order.ts","./libs/orders/src/lib/order.constants.ts","./libs/orders/src/lib/orders.module.ts","./libs/orders/src/lib/pages/cart-page/cart-page.component.ts","./libs/orders/src/lib/pages/cart-page/cart-page.component.html","./libs/orders/src/lib/pages/checkout-page/checkout-page.component.ts","./libs/orders/src/lib/pages/checkout-page/checkout-page.component.html","./libs/orders/src/lib/pages/thank-you/thank-you.component.ts","./libs/orders/src/lib/pages/thank-you/thank-you.component.html","./libs/orders/src/lib/services/cart.service.ts","./libs/orders/src/lib/services/orders.service.ts","./libs/products/src/index.ts","./libs/products/src/lib/components/categories-banner/categories-banner.component.ts","./libs/products/src/lib/components/categories-banner/categories-banner.component.html","./libs/products/src/lib/components/featured-products/featured-products.component.ts","./libs/products/src/lib/components/featured-products/featured-products.component.html","./libs/products/src/lib/components/product-item/product-item.component.ts","./libs/products/src/lib/components/product-item/product-item.component.html","./libs/products/src/lib/components/products-search/products-search.component.ts","./libs/products/src/lib/components/products-search/products-search.component.html","./libs/products/src/lib/models/category.ts","./libs/products/src/lib/models/product.ts","./libs/products/src/lib/pages/product-page/product-page.component.ts","./libs/products/src/lib/pages/product-page/product-page.component.html","./libs/products/src/lib/pages/products-list/products-list.component.ts","./libs/products/src/lib/pages/products-list/products-list.component.html","./libs/products/src/lib/products.module.ts","./libs/products/src/lib/services/categories.service.ts","./libs/products/src/lib/services/products.service.ts","./libs/ui/src/index.ts","./libs/ui/src/lib/components/banner/banner.component.ts","./libs/ui/src/lib/components/banner/banner.component.html","./libs/ui/src/lib/components/gallery/gallery.component.html","./libs/ui/src/lib/components/gallery/gallery.component.ts","./libs/ui/src/lib/ui.module.ts","./libs/users/src/index.ts","./libs/users/src/lib/models/user.ts","./libs/users/src/lib/pages/login/login.component.ts","./libs/users/src/lib/pages/login/login.component.html","./libs/users/src/lib/services/auth-guard.service.ts","./libs/users/src/lib/services/auth.service.ts","./libs/users/src/lib/services/jwt.interceptor.ts","./libs/users/src/lib/services/localstorage.service.ts","./libs/users/src/lib/services/users.service.ts","./libs/users/src/lib/state/users.actions.ts","./libs/users/src/lib/state/users.effects.ts","./libs/users/src/lib/state/users.facade.ts","./libs/users/src/lib/state/users.reducer.ts","./libs/users/src/lib/state/users.selectors.ts","./libs/users/src/lib/users.module.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 2010;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '@bluebits/users';\nimport { CategoriesFormComponent } from './pages/categories/categories-form/categories-form.component';\nimport { CategoriesListComponent } from './pages/categories/categories-list/categories-list.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { OrdersDetailComponent } from './pages/orders/orders-detail/orders-detail.component';\nimport { OrdersListComponent } from './pages/orders/orders-list/orders-list.component';\nimport { ProductsFormComponent } from './pages/products/products-form/products-form.component';\nimport { ProductsListComponent } from './pages/products/products-list/products-list.component';\nimport { UsersFormComponent } from './pages/users/users-form/users-form.component';\nimport { UsersListComponent } from './pages/users/users-list/users-list.component';\nimport { ShellComponent } from './shared/shell/shell.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ShellComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: '',\n        component: DashboardComponent\n      },\n      {\n        path: 'categories',\n        component: CategoriesListComponent\n      },\n      {\n        path: 'categories/form',\n        component: CategoriesFormComponent\n      },\n      {\n        path: 'categories/form/:id',\n        component: CategoriesFormComponent\n      },\n      {\n        path: 'products',\n        component: ProductsListComponent\n      },\n      {\n        path: 'products/form',\n        component: ProductsFormComponent\n      },\n      {\n        path: 'products/form/:id',\n        component: ProductsFormComponent\n      },\n      {\n        path: 'users',\n        component: UsersListComponent\n      },\n      {\n        path: 'users/form',\n        component: UsersFormComponent\n      },\n      {\n        path: 'users/form/:id',\n        component: UsersFormComponent\n      },\n      {\n        path: 'orders',\n        component: OrdersListComponent\n      },\n      {\n        path: 'orders/:id',\n        component: OrdersDetailComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { initialNavigation: 'enabled' })],\n  exports: [RouterModule],\n  declarations: [],\n  providers: []\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'admin-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  title = 'admin';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { ShellComponent } from './shared/shell/shell.component';\nimport { SidebarComponent } from './shared/sidebar/sidebar.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { CategoriesListComponent } from './pages/categories/categories-list/categories-list.component';\nimport { ProductsListComponent } from './pages/products/products-list/products-list.component';\nimport { ProductsFormComponent } from './pages/products/products-form/products-form.component';\nimport { UsersListComponent } from './pages/users/users-list/users-list.component';\nimport { UsersFormComponent } from './pages/users/users-form/users-form.component';\nimport { JwtInterceptor, UsersModule } from '@bluebits/users';\n\nimport { CardModule } from 'primeng/card';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { ButtonModule } from 'primeng/button';\nimport { TableModule } from 'primeng/table';\nimport { CategoriesService } from '@bluebits/products';\nimport { CategoriesFormComponent } from './pages/categories/categories-form/categories-form.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ToastModule } from 'primeng/toast';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ColorPickerModule } from 'primeng/colorpicker';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { EditorModule } from 'primeng/editor';\nimport { TagModule } from 'primeng/tag';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { OrdersListComponent } from './pages/orders/orders-list/orders-list.component';\nimport { OrdersDetailComponent } from './pages/orders/orders-detail/orders-detail.component';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { AppRoutingModule } from './app-routing.module';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nconst UX_MODULE = [\n  CardModule,\n  ToastModule,\n  InputTextModule,\n  TableModule,\n  ToolbarModule,\n  ButtonModule,\n  ConfirmDialogModule,\n  ColorPickerModule,\n  InputNumberModule,\n  DropdownModule,\n  InputTextareaModule,\n  InputSwitchModule,\n  EditorModule,\n  TagModule,\n  InputMaskModule,\n  FieldsetModule\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    ShellComponent,\n    DashboardComponent,\n    CategoriesListComponent,\n    CategoriesFormComponent,\n    ProductsListComponent,\n    ProductsFormComponent,\n    UsersListComponent,\n    UsersFormComponent,\n    OrdersListComponent,\n    OrdersDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n    FormsModule,\n    ReactiveFormsModule,\n    UsersModule,\n    ...UX_MODULE\n  ],\n  providers: [\n    CategoriesService,\n    MessageService,\n    ConfirmationService,\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Location } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CategoriesService, Category } from '@bluebits/products';\nimport { MessageService } from 'primeng/api';\nimport { Subject, timer } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'admin-categories-form',\n  templateUrl: './categories-form.component.html',\n  styles: []\n})\nexport class CategoriesFormComponent implements OnInit, OnDestroy {\n  form: FormGroup;\n  isSubmitted = false;\n  editmode = false;\n  currentCategoryId: string;\n  endsubs$: Subject<any> = new Subject();\n\n  constructor(\n    private messageService: MessageService,\n    private formBuilder: FormBuilder,\n    private categoriesService: CategoriesService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      icon: ['', Validators.required],\n      color: ['#fff']\n    });\n\n    this._checkEditMode();\n  }\n\n  ngOnDestroy() {\n    this.endsubs$.next();\n    this.endsubs$.complete();\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    const category: Category = {\n      id: this.currentCategoryId,\n      name: this.categoryForm.name.value,\n      icon: this.categoryForm.icon.value,\n      color: this.categoryForm.color.value\n    };\n    if (this.editmode) {\n      this._updateCategory(category);\n    } else {\n      this._addCategory(category);\n    }\n  }\n\n  onCancle() {\n    this.location.back();\n  }\n\n  private _addCategory(category: Category) {\n    this.categoriesService\n      .createCategory(category)\n      .pipe(takeUntil(this.endsubs$))\n      .subscribe(\n        (category: Category) => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Success',\n            detail: `Category ${category.name} is created!`\n          });\n          timer(2000)\n            .toPromise()\n            .then(() => {\n              this.location.back();\n            });\n        },\n        () => {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error',\n            detail: 'Category is not created!'\n          });\n        }\n      );\n  }\n\n  private _updateCategory(category: Category) {\n    this.categoriesService\n      .updateCategory(category)\n      .pipe(takeUntil(this.endsubs$))\n      .subscribe(\n        () => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Success',\n            detail: 'Category is updated!'\n          });\n          timer(2000)\n            .toPromise()\n            .then(() => {\n              this.location.back();\n            });\n        },\n        () => {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error',\n            detail: 'Category is not updated!'\n          });\n        }\n      );\n  }\n\n  private _checkEditMode() {\n    this.route.params.pipe(takeUntil(this.endsubs$)).subscribe((params) => {\n      if (params.id) {\n        this.editmode = true;\n        this.currentCategoryId = params.id;\n        this.categoriesService\n          .getCategory(params.id)\n          .pipe(takeUntil(this.endsubs$))\n          .subscribe((category) => {\n            this.categoryForm.name.setValue(category.name);\n            this.categoryForm.icon.setValue(category.icon);\n            this.categoryForm.color.setValue(category.color);\n          });\n      }\n    });\n  }\n\n  get categoryForm() {\n    return this.form.controls;\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card\n    [header]=\"editmode ? 'Edit Category' : 'Add Category'\"\n    subheader=\"You can add or edit categories here\"\n  >\n    <div class=\"p-grid p-mb-5\">\n      <div class=\"p-col-12\">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-left\"></div>\n          <div class=\"p-toolbar-group-right\">\n            <p-button\n              styleClass=\"p-button-primary p-mr-2\"\n              [label]=\"editmode ? 'Update' : 'Create'\"\n              icon=\"pi pi-plus\"\n              (click)=\"onSubmit()\"\n            ></p-button>\n            <p-button\n              styleClass=\"p-button-secondary\"\n              label=\"Cancle\"\n              icon=\"pi pi-arrow-circle-left\"\n              (click)=\"onCancle()\"\n            ></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <form [formGroup]=\"form\">\n          <div class=\"p-fluid p-formgrid p-grid\">\n            <div class=\"p-field p-col\">\n              <label for=\"name\">Name</label>\n              <input formControlName=\"name\" id=\"name\" type=\"text\" pInputText />\n              <small *ngIf=\"categoryForm.name.invalid && isSubmitted\" class=\"p-error\"\n                >Name is required</small\n              >\n            </div>\n            <div class=\"p-field p-col\">\n              <label for=\"icon\">Icon</label>\n              <input formControlName=\"icon\" id=\"icon\" type=\"text\" pInputText />\n              <small *ngIf=\"categoryForm.icon.invalid && isSubmitted\" class=\"p-error\"\n                >Icon is required</small\n              >\n            </div>\n            <div class=\"p-field p-col\">\n              <label for=\"color\">Color</label><br />\n              <p-colorPicker formControlName=\"color\"></p-colorPicker>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </p-card>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CategoriesService, Category } from '@bluebits/products';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n@Component({\n  selector: 'admin-categories-list',\n  templateUrl: './categories-list.component.html',\n  styles: []\n})\nexport class CategoriesListComponent implements OnInit, OnDestroy {\n  categories: Category[] = [];\n  endsubs$: Subject<any> = new Subject();\n\n  constructor(\n    private categoriesService: CategoriesService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this._getCategories();\n  }\n  ngOnDestroy() {\n    this.endsubs$.next();\n    this.endsubs$.complete();\n  }\n\n  deleteCategory(categoryId: string) {\n    this.confirmationService.confirm({\n      message: 'Do you want to Delete this Category?',\n      header: 'Delete Category',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.categoriesService\n          .deleteCategory(categoryId)\n          .pipe(takeUntil(this.endsubs$))\n          .subscribe(\n            () => {\n              this._getCategories();\n              this.messageService.add({\n                severity: 'success',\n                summary: 'Success',\n                detail: 'Category is deleted!'\n              });\n            },\n            () => {\n              this.messageService.add({\n                severity: 'error',\n                summary: 'Error',\n                detail: 'Category is not deleted!'\n              });\n            }\n          );\n      }\n    });\n  }\n\n  updateCategory(categoryid: string) {\n    this.router.navigateByUrl(`categories/form/${categoryid}`);\n  }\n\n  private _getCategories() {\n    this.categoriesService\n      .getCategories()\n      .pipe(takeUntil(this.endsubs$))\n      .subscribe((cats) => {\n        this.categories = cats;\n      });\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card header=\"Categories\" subheader=\"List of all categories\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-left\">\n            <p-button\n              styleClass=\"p-button-success\"\n              label=\"New\"\n              icon=\"pi pi-plus\"\n              routerLink=\"form\"\n            ></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <p-table [value]=\"categories\" styleClass=\"p-datatable-gridlines\">\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\n              <th>Icon</th>\n              <th>Color</th>\n              <th></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-category>\n            <tr>\n              <td>{{ category.name }}</td>\n              <td><i style=\"font-size: 2rem\" class=\"pi\" [ngClass]=\"'pi-' + category.icon\"></i></td>\n              <td>\n                <i\n                  class=\"pi pi-circle-on\"\n                  style=\"font-size: 2rem\"\n                  [ngStyle]=\"{ color: category.color }\"\n                ></i>\n              </td>\n              <td>\n                <p-button\n                  (click)=\"deleteCategory(category.id)\"\n                  styleClass=\"p-button-danger p-mr-2\"\n                  icon=\"pi pi-trash\"\n                ></p-button>\n                <p-button\n                  (click)=\"updateCategory(category.id)\"\n                  styleClass=\"p-button-success\"\n                  icon=\"pi pi-pencil\"\n                ></p-button>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-card>\n</div>\n<p-confirmDialog\n  [style]=\"{ width: '50vw' }\"\n  [baseZIndex]=\"10000\"\n  rejectButtonStyleClass=\"p-button-text\"\n></p-confirmDialog>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { OrdersService } from '@bluebits/orders';\nimport { ProductsService } from '@bluebits/products';\nimport { UsersService } from '@bluebits/users';\nimport { combineLatest, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'admin-dashboard',\n  templateUrl: './dashboard.component.html'\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  statistics = [];\n  endsubs$: Subject<any> = new Subject();\n\n  constructor(\n    private userService: UsersService,\n    private productService: ProductsService,\n    private ordersService: OrdersService\n  ) {}\n\n  ngOnInit(): void {\n    combineLatest([\n      this.ordersService.getOrdersCount(),\n      this.productService.getProductsCount(),\n      this.userService.getUsersCount(),\n      this.ordersService.getTotalSales()\n    ])\n      .pipe(takeUntil(this.endsubs$))\n      .subscribe((values) => {\n        this.statistics = values;\n      });\n  }\n\n  ngOnDestroy() {\n    this.endsubs$.next();\n    this.endsubs$.complete();\n  }\n}\n","<div class=\"admin-page\" *ngIf=\"statistics.length\">\n  <p-card header=\"Dashboard\" subheader=\"Latest Updates\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-3\">\n        <p-card styleClass=\"d-orders\">\n          <div class=\"d-item\">\n            <div>\n              <i class=\"pi pi-shopping-cart\"></i><br />\n              <span class=\"name\">Orders</span>\n            </div>\n            <span class=\"number\">{{ statistics[0] }}</span>\n          </div>\n        </p-card>\n      </div>\n      <div class=\"p-col-3\">\n        <p-card styleClass=\"d-products\">\n          <div class=\"d-item\">\n            <div>\n              <i class=\"pi pi-briefcase\"></i><br />\n              <span class=\"name\">Products</span>\n            </div>\n            <span class=\"number\">{{ statistics[1] }}</span>\n          </div>\n        </p-card>\n      </div>\n      <div class=\"p-col-3\">\n        <p-card styleClass=\"d-users\">\n          <div class=\"d-item\">\n            <div>\n              <i class=\"pi pi-users\"></i><br />\n              <span class=\"name\">Users</span>\n            </div>\n            <span class=\"number\">{{ statistics[2] }}</span>\n          </div>\n        </p-card>\n      </div>\n      <div class=\"p-col-3\">\n        <p-card styleClass=\"d-totalsales\">\n          <div class=\"d-item\">\n            <div>\n              <i class=\"pi pi-dollar\"></i><br />\n              <span class=\"name\">TotalSales</span>\n            </div>\n            <span class=\"number\">{{ statistics[3] | currency }}</span>\n          </div>\n        </p-card>\n      </div>\n    </div>\n  </p-card>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Order, OrdersService, ORDER_STATUS } from '@bluebits/orders';\nimport { MessageService } from 'primeng/api';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'admin-orders-detail',\n  templateUrl: './orders-detail.component.html',\n  styles: []\n})\nexport class OrdersDetailComponent implements OnInit, OnDestroy {\n  order: Order;\n  orderStatuses = [];\n  selectedStatus: any;\n  endsubs$: Subject<any> = new Subject();\n\n  constructor(\n    private orderService: OrdersService,\n    private messageService: MessageService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this._mapOrderStatus();\n    this._getOrder();\n  }\n\n  ngOnDestroy() {\n    this.endsubs$.next();\n    this.endsubs$.complete();\n  }\n\n  private _mapOrderStatus() {\n    this.orderStatuses = Object.keys(ORDER_STATUS).map((key) => {\n      return {\n        id: key,\n        name: ORDER_STATUS[key].label\n      };\n    });\n  }\n\n  private _getOrder() {\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.orderService\n          .getOrder(params.id)\n          .pipe(takeUntil(this.endsubs$))\n          .subscribe((order) => {\n            this.order = order;\n            this.selectedStatus = order.status;\n          });\n      }\n    });\n  }\n\n  onStatusChange(event) {\n    this.orderService\n      .updateOrder({ status: event.value }, this.order.id)\n      .pipe(takeUntil(this.endsubs$))\n      .subscribe(\n        () => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Success',\n            detail: 'Order is updated!'\n          });\n        },\n        () => {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error',\n            detail: 'Order is not updated!'\n          });\n        }\n      );\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\" *ngIf=\"order\">\n  <p-card [header]=\"'View Order'\" subheader=\"You can edit order status here\">\n    <p-fieldset legend=\"Order Details\" styleClass=\"p-mb-4\" [toggleable]=\"true\">\n      <div class=\"p-grid\">\n        <div class=\"p-col-4\">\n          <h5>Order Id</h5>\n          <p>{{ order.id }}</p>\n        </div>\n\n        <div class=\"p-col-4\">\n          <h5>Order Date</h5>\n          <p>{{ order.dateOrdered | date: 'short' }}</p>\n        </div>\n\n        <div class=\"p-col-4\">\n          <h5>Order Status</h5>\n          <p-dropdown\n            [options]=\"orderStatuses\"\n            optionLabel=\"name\"\n            optionValue=\"id\"\n            (onChange)=\"onStatusChange($event)\"\n            [(ngModel)]=\"selectedStatus\"\n          >\n          </p-dropdown>\n        </div>\n\n        <div class=\"p-col-4\">\n          <h5>Order Total Price</h5>\n          <p>{{ order.totalPrice | currency }}</p>\n        </div>\n      </div>\n    </p-fieldset>\n    <p-fieldset legend=\"Order Items\" styleClass=\"p-mb-4\" [toggleable]=\"true\">\n      <div class=\"p-grid p-mb-5\">\n        <div class=\"p-col-2 p-text-bold\">Name</div>\n        <div class=\"p-col-2 p-text-bold\">Brand</div>\n        <div class=\"p-col-2 p-text-bold\">Category</div>\n        <div class=\"p-col-2 p-text-bold\">Price</div>\n        <div class=\"p-col-2 p-text-bold\">Quantity</div>\n        <div class=\"p-col-2 p-text-bold\">Subtotal</div>\n      </div>\n      <div class=\"p-grid p-mb-5\" *ngFor=\"let orderItem of order.orderItems\">\n        <div class=\"p-col-2\">{{ orderItem.product.name }}</div>\n        <div class=\"p-col-2\">{{ orderItem.product.brand }}</div>\n        <div class=\"p-col-2\">{{ orderItem.product.category.name }}</div>\n        <div class=\"p-col-2\">{{ orderItem.product.price | currency }}</div>\n        <div class=\"p-col-2\">{{ orderItem.quantity }}</div>\n        <div class=\"p-col-2\">{{ orderItem.product.price * orderItem.quantity | currency }}</div>\n      </div>\n      <div class=\"p-grid\" style=\"color: green\">\n        <div class=\"p-col-2 p-offset-8 p-text-bold\">Total Price</div>\n\n        <div class=\"p-col-2 p-text-bold\">{{ order.totalPrice | currency }}</div>\n      </div>\n    </p-fieldset>\n    <p-fieldset legend=\"Order Address\" styleClass=\"p-mb-4\" [toggleable]=\"true\">\n      <div class=\"p-grid\">\n        <div class=\"p-col-4\">\n          <h5>Order Address</h5>\n          <p>\n            {{ order.shippingAddress1 }}<br />\n            {{ order.shippingAddress2 }}<br />\n            {{ order.zip }} {{ order.city }}<br />\n            {{ order.country }}\n          </p>\n        </div>\n\n        <div class=\"p-col-4\">\n          <h5>Customer Info</h5>\n          <p>{{ order.user.name }}</p>\n        </div>\n\n        <div class=\"p-col-4\">\n          <h5>Contact Info</h5>\n          <p>{{ order.phone }}</p>\n        </div>\n      </div>\n    </p-fieldset>\n  </p-card>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Order, OrdersService, ORDER_STATUS } from '@bluebits/orders';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'admin-orders-list',\n  templateUrl: './orders-list.component.html',\n  styles: []\n})\nexport class OrdersListComponent implements OnInit, OnDestroy {\n  orders: Order[] = [];\n  orderStatus = ORDER_STATUS;\n  endsubs$: Subject<any> = new Subject();\n\n  constructor(\n    private ordersService: OrdersService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this._getOrders();\n  }\n  ngOnDestroy() {\n    this.endsubs$.next();\n    this.endsubs$.complete();\n  }\n\n  _getOrders() {\n    this.ordersService\n      .getOrders()\n      .pipe(takeUntil(this.endsubs$))\n      .subscribe((orders) => {\n        this.orders = orders;\n      });\n  }\n\n  showOrder(orderId) {\n    this.router.navigateByUrl(`orders/${orderId}`);\n  }\n\n  deleteOrder(orderId: string) {\n    this.confirmationService.confirm({\n      message: 'Do you want to Delete this Order?',\n      header: 'Delete Order',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.ordersService\n          .deleteOrder(orderId)\n          .pipe(takeUntil(this.endsubs$))\n          .subscribe(\n            () => {\n              this._getOrders();\n              this.messageService.add({\n                severity: 'success',\n                summary: 'Success',\n                detail: 'Order is deleted!'\n              });\n            },\n            () => {\n              this.messageService.add({\n                severity: 'error',\n                summary: 'Error',\n                detail: 'Order is not deleted!'\n              });\n            }\n          );\n      }\n    });\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card header=\"Orders\" subheader=\"List of all orders\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <p-table [value]=\"orders\" styleClass=\"p-datatable-gridlines\">\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th pSortableColumn=\"name\">User <p-sortIcon field=\"user\"></p-sortIcon></th>\n              <th pSortableColumn=\"totalPrice\">\n                Total Price <p-sortIcon field=\"totalPrice\"></p-sortIcon>\n              </th>\n              <th pSortableColumn=\"dateOrdered\">\n                Date Ordered <p-sortIcon field=\"dateOrdered\"></p-sortIcon>\n              </th>\n              <th pSortableColumn=\"status\">Status <p-sortIcon field=\"status\"></p-sortIcon></th>\n              <th></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-order>\n            <tr>\n              <td>{{ order.user.name }}</td>\n              <td>{{ order.totalPrice }}</td>\n              <td>{{ order.dateOrdered | date: 'short' }}</td>\n              <td>\n                <p-tag\n                  [value]=\"orderStatus[order.status].label\"\n                  [severity]=\"orderStatus[order.status].color\"\n                ></p-tag>\n              </td>\n              <td>\n                <p-button\n                  (click)=\"deleteOrder(order.id)\"\n                  styleClass=\"p-button-danger p-mr-2\"\n                  icon=\"pi pi-trash\"\n                ></p-button>\n                <p-button\n                  (click)=\"showOrder(order.id)\"\n                  styleClass=\"p-button-success\"\n                  icon=\"pi pi-eye\"\n                ></p-button>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-card>\n</div>\n<p-confirmDialog\n  [style]=\"{ width: '50vw' }\"\n  [baseZIndex]=\"10000\"\n  rejectButtonStyleClass=\"p-button-text\"\n></p-confirmDialog>\n","import { Location } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CategoriesService, Product, ProductsService } from '@bluebits/products';\nimport { MessageService } from 'primeng/api';\nimport { Subject, timer } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'admin-products-form',\n  templateUrl: './products-form.component.html',\n  styles: []\n})\nexport class ProductsFormComponent implements OnInit, OnDestroy {\n  editmode = false;\n  form: FormGroup;\n  isSubmitted = false;\n  catagories = [];\n  imageDisplay: string | ArrayBuffer;\n  currentProductId: string;\n  endsubs$: Subject<any> = new Subject();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private productsService: ProductsService,\n    private categoriesService: CategoriesService,\n    private messageService: MessageService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this._initForm();\n    this._getCategories();\n    this._checkEditMode();\n  }\n\n  ngOnDestroy() {\n    this.endsubs$.next();\n    this.endsubs$.complete();\n  }\n\n  private _initForm() {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      brand: ['', Validators.required],\n      price: ['', Validators.required],\n      category: ['', Validators.required],\n      countInStock: ['', Validators.required],\n      description: ['', Validators.required],\n      richDescription: [''],\n      image: ['', Validators.required],\n      isFeatured: [false]\n    });\n  }\n\n  private _getCategories() {\n    this.categoriesService\n      .getCategories()\n      .pipe(takeUntil(this.endsubs$))\n      .subscribe((categories) => {\n        this.catagories = categories;\n      });\n  }\n\n  private _addProduct(productData: FormData) {\n    this.productsService\n      .createProduct(productData)\n      .pipe(takeUntil(this.endsubs$))\n      .subscribe(\n        (product: Product) => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Success',\n            detail: `Product ${product.name} is created!`\n          });\n          timer(2000)\n            .toPromise()\n            .then(() => {\n              this.location.back();\n            });\n        },\n        () => {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error',\n            detail: 'Product is not created!'\n          });\n        }\n      );\n  }\n\n  private _updateProduct(productFormData: FormData) {\n    this.productsService\n      .updateProduct(productFormData, this.currentProductId)\n      .pipe(takeUntil(this.endsubs$))\n      .subscribe(\n        () => {\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Success',\n            detail: 'Product is updated!'\n          });\n          timer(2000)\n            .toPromise()\n            .then(() => {\n              this.location.back();\n            });\n        },\n        () => {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error',\n            detail: 'Product is not updated!'\n          });\n        }\n      );\n  }\n\n  private _checkEditMode() {\n    this.route.params.pipe(takeUntil(this.endsubs$)).subscribe((params) => {\n      if (params.id) {\n        this.editmode = true;\n        this.currentProductId = params.id;\n        this.productsService\n          .getProduct(params.id)\n          .pipe(takeUntil(this.endsubs$))\n          .subscribe((product) => {\n            this.productForm.name.setValue(product.name);\n            this.productForm.category.setValue(product.category.id);\n            this.productForm.brand.setValue(product.brand);\n            this.productForm.price.setValue(product.price);\n            this.productForm.countInStock.setValue(product.countInStock);\n            this.productForm.isFeatured.setValue(product.isFeatured);\n            this.productForm.description.setValue(product.description);\n            this.productForm.richDescription.setValue(product.richDescription);\n            this.imageDisplay = product.image;\n            this.productForm.image.setValidators([]);\n            this.productForm.image.updateValueAndValidity();\n          });\n      }\n    });\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.form.invalid) return;\n\n    const productFormData = new FormData();\n    Object.keys(this.productForm).map((key) => {\n      productFormData.append(key, this.productForm[key].value);\n    });\n    if (this.editmode) {\n      this._updateProduct(productFormData);\n    } else {\n      this._addProduct(productFormData);\n    }\n  }\n  onCancle() {\n    this.location.back();\n  }\n\n  onImageUpload(event) {\n    const file = event.target.files[0];\n    if (file) {\n      this.form.patchValue({ image: file });\n      this.form.get('image').updateValueAndValidity();\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        this.imageDisplay = fileReader.result;\n      };\n      fileReader.readAsDataURL(file);\n    }\n  }\n\n  get productForm() {\n    return this.form.controls;\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card\n    [header]=\"editmode ? 'Edit Product' : 'Add Product'\"\n    subheader=\"You can add or edit products here\"\n  >\n    <div class=\"p-grid p-mb-5\">\n      <div class=\"p-col-12\">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-left\"></div>\n          <div class=\"p-toolbar-group-right\">\n            <p-button\n              styleClass=\"p-button-primary p-mr-2\"\n              [label]=\"editmode ? 'Update' : 'Create'\"\n              icon=\"pi pi-plus\"\n              (click)=\"onSubmit()\"\n            ></p-button>\n            <p-button\n              styleClass=\"p-button-secondary\"\n              label=\"Cancle\"\n              icon=\"pi pi-arrow-circle-left\"\n              (click)=\"onCancle()\"\n            ></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <form [formGroup]=\"form\">\n          <div class=\"p-fluid p-formgrid p-grid\">\n            <div class=\"p-field p-col\">\n              <label for=\"name\">Name</label>\n              <input formControlName=\"name\" id=\"name\" type=\"text\" pInputText />\n              <small *ngIf=\"productForm.name.invalid && isSubmitted\" class=\"p-error\"\n                >Name is required</small\n              >\n            </div>\n            <div class=\"p-field p-col\">\n              <label for=\"brand\">Brand</label>\n              <input formControlName=\"brand\" id=\"brand\" type=\"text\" pInputText />\n              <small *ngIf=\"productForm.brand.invalid && isSubmitted\" class=\"p-error\"\n                >Brand is required</small\n              >\n            </div>\n            <div class=\"p-field p-col\">\n              <label for=\"price\">Price</label><br />\n              <p-inputNumber formControlName=\"price\" mode=\"decimal\" [useGrouping]=\"false\">\n              </p-inputNumber>\n              <small *ngIf=\"productForm.price.invalid && isSubmitted\" class=\"p-error\"\n                >Price is required</small\n              >\n            </div>\n          </div>\n          <div class=\"p-fluid p-formgrid p-grid\">\n            <div class=\"p-field p-col-4\">\n              <label for=\"countInStock\">countInStock</label><br />\n              <p-inputNumber formControlName=\"countInStock\" mode=\"decimal\" [useGrouping]=\"false\">\n              </p-inputNumber>\n              <small *ngIf=\"productForm.countInStock.invalid && isSubmitted\" class=\"p-error\"\n                >Count in stock is required</small\n              >\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"category\">category</label><br />\n              <p-dropdown\n                [options]=\"catagories\"\n                formControlName=\"category\"\n                optionLabel=\"name\"\n                optionValue=\"id\"\n                [filter]=\"true\"\n                filterBy=\"name\"\n                [showClear]=\"true\"\n                placeholder=\"Select a Category\"\n              ></p-dropdown>\n\n              <small *ngIf=\"productForm.category.invalid && isSubmitted\" class=\"p-error\"\n                >Category is required</small\n              >\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"isFeatured\">Is Featured</label><br />\n              <p-inputSwitch formControlName=\"isFeatured\"></p-inputSwitch>\n            </div>\n            <div class=\"p-field p-col-12\">\n              <label for=\"description\">Description</label><br />\n              <textarea\n                pInputTextarea\n                formControlName=\"description\"\n                [rows]=\"7\"\n                [cols]=\"30\"\n              ></textarea>\n              <small *ngIf=\"productForm.description.invalid && isSubmitted\" class=\"p-error\"\n                >Description is required</small\n              >\n            </div>\n            <div class=\"p-field p-col-12\">\n              <label for=\"richDescription\">Product Details</label><br />\n              <p-editor formControlName=\"richDescription\" [style]=\"{ height: '320px' }\"></p-editor>\n            </div>\n            <div class=\"p-field p-col-12\">\n              <label for=\"name\">Main Image</label>\n              <input\n                type=\"file\"\n                class=\"p-inputtext\"\n                accept=\"image/*\"\n                (change)=\"onImageUpload($event)\"\n              />\n              <small *ngIf=\"productForm.image.invalid && isSubmitted\" class=\"p-error\"\n                >Image is required</small\n              >\n              <div class=\"p-col-2 p-mt-2 p-pl-0\">\n                <img style=\"width: 100%\" [src]=\"imageDisplay\" alt=\"\" />\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </p-card>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProductsService } from '@bluebits/products';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'admin-products-list',\n  templateUrl: './products-list.component.html',\n  styles: []\n})\nexport class ProductsListComponent implements OnInit, OnDestroy {\n  products = [];\n  endsubs$: Subject<any> = new Subject();\n\n  constructor(\n    private productsService: ProductsService,\n    private router: Router,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService\n  ) {}\n\n  ngOnInit(): void {\n    this._getProducts();\n  }\n\n  ngOnDestroy() {\n    this.endsubs$.next();\n    this.endsubs$.complete();\n  }\n\n  private _getProducts() {\n    this.productsService\n      .getProducts()\n      .pipe(takeUntil(this.endsubs$))\n      .subscribe((products) => {\n        this.products = products;\n      });\n  }\n\n  updateProduct(productid: string) {\n    this.router.navigateByUrl(`products/form/${productid}`);\n  }\n\n  deleteProduct(productId: string) {\n    this.confirmationService.confirm({\n      message: 'Do you want to delete this Product?',\n      header: 'Delete Product',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.productsService\n          .deleteProduct(productId)\n          .pipe(takeUntil(this.endsubs$))\n          .subscribe(\n            () => {\n              this._getProducts();\n              this.messageService.add({\n                severity: 'success',\n                summary: 'Success',\n                detail: 'Product is deleted!'\n              });\n            },\n            () => {\n              this.messageService.add({\n                severity: 'error',\n                summary: 'Error',\n                detail: 'Product is not deleted!'\n              });\n            }\n          );\n      }\n    });\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card header=\"Products\" subheader=\"List of all products\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-left\">\n            <p-button\n              styleClass=\"p-button-success\"\n              label=\"New\"\n              icon=\"pi pi-plus\"\n              routerLink=\"form\"\n            ></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <p-table\n          [paginator]=\"true\"\n          [rows]=\"10\"\n          [value]=\"products\"\n          styleClass=\"p-datatable-gridlines\"\n          [globalFilterFields]=\"['name']\"\n        >\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\n              <th>Image</th>\n              <th pSortableColumn=\"price\">Price <p-sortIcon field=\"price\"></p-sortIcon></th>\n              <th pSortableColumn=\"stock\">Stock <p-sortIcon field=\"stock\"></p-sortIcon></th>\n              <th pSortableColumn=\"category\">\n                Category <p-sortIcon field=\"category\"></p-sortIcon>\n              </th>\n              <th pSortableColumn=\"created\">\n                Created at <p-sortIcon field=\"created\"></p-sortIcon>\n              </th>\n              <th></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-product>\n            <tr>\n              <td>{{ product.name }}</td>\n              <td><img [src]=\"product.image\" style=\"width: 100%\" alt=\"\" /></td>\n              <td>{{ product.price }}</td>\n              <td>{{ product.countInStock }}</td>\n              <td>{{ product.category.name }}</td>\n              <td>{{ product.dateCreated | date: 'short' }}</td>\n              <td>\n                <p-button\n                  (click)=\"deleteProduct(product.id)\"\n                  styleClass=\"p-button-danger p-mr-2\"\n                  icon=\"pi pi-trash\"\n                ></p-button>\n                <p-button\n                  (click)=\"updateProduct(product.id)\"\n                  styleClass=\"p-button-success\"\n                  icon=\"pi pi-pencil\"\n                ></p-button>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-card>\n</div>\n<p-confirmDialog\n  [style]=\"{ width: '50vw' }\"\n  [baseZIndex]=\"10000\"\n  rejectButtonStyleClass=\"p-button-text\"\n></p-confirmDialog>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { UsersService, User } from '@bluebits/users';\nimport { MessageService } from 'primeng/api';\nimport { timer } from 'rxjs';\n\n@Component({\n  selector: 'admin-users-form',\n  templateUrl: './users-form.component.html',\n  styles: []\n})\nexport class UsersFormComponent implements OnInit {\n  form: FormGroup;\n  isSubmitted = false;\n  editmode = false;\n  currentUserId: string;\n  countries = [];\n\n  constructor(\n    private messageService: MessageService,\n    private formBuilder: FormBuilder,\n    private usersService: UsersService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this._initUserForm();\n    this._getCountries();\n    this._checkEditMode();\n  }\n\n  private _initUserForm() {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      password: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', Validators.required],\n      isAdmin: [false],\n      street: [''],\n      apartment: [''],\n      zip: [''],\n      city: [''],\n      country: ['']\n    });\n  }\n\n  private _getCountries() {\n    this.countries = this.usersService.getCountries();\n  }\n\n  private _addUser(user: User) {\n    this.usersService.createUser(user).subscribe(\n      (user: User) => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Success',\n          detail: `User ${user.name} is created!`\n        });\n        timer(2000)\n          .toPromise()\n          .then(() => {\n            this.location.back();\n          });\n      },\n      () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'User is not created!'\n        });\n      }\n    );\n  }\n\n  private _updateUser(user: User) {\n    this.usersService.updateUser(user).subscribe(\n      () => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Success',\n          detail: 'User is updated!'\n        });\n        timer(2000)\n          .toPromise()\n          .then(() => {\n            this.location.back();\n          });\n      },\n      () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'User is not updated!'\n        });\n      }\n    );\n  }\n\n  private _checkEditMode() {\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.editmode = true;\n        this.currentUserId = params.id;\n        this.usersService.getUser(params.id).subscribe((user) => {\n          this.userForm.name.setValue(user.name);\n          this.userForm.email.setValue(user.email);\n          this.userForm.phone.setValue(user.phone);\n          this.userForm.isAdmin.setValue(user.isAdmin);\n          this.userForm.street.setValue(user.street);\n          this.userForm.apartment.setValue(user.apartment);\n          this.userForm.zip.setValue(user.zip);\n          this.userForm.city.setValue(user.city);\n          this.userForm.country.setValue(user.country);\n\n          this.userForm.password.setValidators([]);\n          this.userForm.password.updateValueAndValidity();\n        });\n      }\n    });\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    const user: User = {\n      id: this.currentUserId,\n      name: this.userForm.name.value,\n      email: this.userForm.email.value,\n      password: this.userForm.password.value,\n      phone: this.userForm.phone.value,\n      isAdmin: this.userForm.isAdmin.value,\n      street: this.userForm.street.value,\n      apartment: this.userForm.apartment.value,\n      zip: this.userForm.zip.value,\n      city: this.userForm.city.value,\n      country: this.userForm.country.value\n    };\n    if (this.editmode) {\n      this._updateUser(user);\n    } else {\n      this._addUser(user);\n    }\n  }\n\n  onCancle() {\n    this.location.back();\n  }\n\n  get userForm() {\n    return this.form.controls;\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card [header]=\"editmode ? 'Edit User' : 'Add User'\" subheader=\"You can add or edit users here\">\n    <div class=\"p-grid p-mb-5\">\n      <div class=\"p-col-12\">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-left\"></div>\n          <div class=\"p-toolbar-group-right\">\n            <p-button\n              styleClass=\"p-button-primary p-mr-2\"\n              [label]=\"editmode ? 'Update' : 'Create'\"\n              icon=\"pi pi-plus\"\n              (click)=\"onSubmit()\"\n            ></p-button>\n            <p-button\n              styleClass=\"p-button-secondary\"\n              label=\"Cancle\"\n              icon=\"pi pi-arrow-circle-left\"\n              (click)=\"onCancle()\"\n            ></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <form [formGroup]=\"form\">\n          <div class=\"p-fluid p-formgrid p-grid\">\n            <div class=\"p-field p-col-4\">\n              <label for=\"name\">Name</label>\n              <input formControlName=\"name\" id=\"name\" type=\"text\" pInputText />\n              <small *ngIf=\"userForm.name.invalid && isSubmitted\" class=\"p-error\"\n                >Name is required</small\n              >\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"email\">Email</label>\n              <input formControlName=\"email\" id=\"email\" type=\"text\" pInputText />\n              <small *ngIf=\"userForm.email.invalid && isSubmitted\" class=\"p-error\"\n                ><span *ngIf=\"userForm.email.errors.required\">email is required</span>\n                <span *ngIf=\"userForm.email.errors.email\">email is invalid</span></small\n              >\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"password\">Password</label>\n              <input formControlName=\"password\" id=\"password\" type=\"password\" pInputText />\n              <small *ngIf=\"userForm.password.invalid && isSubmitted\" class=\"p-error\"\n                >Password is required</small\n              >\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"color\">Phone</label><br />\n              <p-inputMask\n                mask=\"(999) 999-9999\"\n                formControlName=\"phone\"\n                placeholder=\"(999) 999-9999\"\n              ></p-inputMask>\n              <small *ngIf=\"userForm.phone.invalid && isSubmitted\" class=\"p-error\"\n                >phone is required</small\n              >\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"isAdmin\">Is Admin</label><br />\n              <p-inputSwitch formControlName=\"isAdmin\"></p-inputSwitch>\n            </div>\n          </div>\n          <div class=\"p-fluid p-formgrid p-grid\">\n            <div class=\"p-field p-col-4\">\n              <label for=\"street\">Street</label>\n              <input formControlName=\"street\" id=\"street\" type=\"text\" pInputText />\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"street\">Apartment</label>\n              <input formControlName=\"apartment\" id=\"apartment\" type=\"text\" pInputText />\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"street\">Zip Code</label>\n              <input formControlName=\"zip\" id=\"zip\" type=\"text\" pInputText />\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"city\">City</label>\n              <input formControlName=\"city\" id=\"city\" type=\"text\" pInputText />\n            </div>\n            <div class=\"p-field p-col-4\">\n              <label for=\"country\">Country</label><br />\n              <p-dropdown\n                [options]=\"countries\"\n                formControlName=\"country\"\n                optionLabel=\"name\"\n                optionValue=\"id\"\n                [filter]=\"true\"\n                filterBy=\"name\"\n                [showClear]=\"true\"\n                placeholder=\"Select a Country\"\n              ></p-dropdown>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </p-card>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { User, UsersService } from '@bluebits/users';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'admin-users-list',\n  templateUrl: './users-list.component.html',\n  styles: []\n})\nexport class UsersListComponent implements OnInit, OnDestroy {\n  users: User[] = [];\n  endsubs$: Subject<any> = new Subject();\n\n  constructor(\n    private usersService: UsersService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this._getUsers();\n  }\n\n  ngOnDestroy() {\n    this.endsubs$.next();\n    this.endsubs$.complete();\n  }\n\n  deleteUser(userId: string) {\n    this.confirmationService.confirm({\n      message: 'Do you want to Delete this User?',\n      header: 'Delete User',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.usersService\n          .deleteUser(userId)\n          .pipe(takeUntil(this.endsubs$))\n          .subscribe(\n            () => {\n              this._getUsers();\n              this.messageService.add({\n                severity: 'success',\n                summary: 'Success',\n                detail: 'User is deleted!'\n              });\n            },\n            () => {\n              this.messageService.add({\n                severity: 'error',\n                summary: 'Error',\n                detail: 'User is not deleted!'\n              });\n            }\n          );\n      }\n    });\n  }\n\n  updateUser(userid: string) {\n    this.router.navigateByUrl(`users/form/${userid}`);\n  }\n\n  getCountryName(countryKey: string) {\n    if (countryKey) return this.usersService.getCountry(countryKey);\n  }\n\n  private _getUsers() {\n    this.usersService\n      .getUsers()\n      .pipe(takeUntil(this.endsubs$))\n      .subscribe((users) => {\n        this.users = users;\n      });\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card header=\"Users\" subheader=\"List of all users\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-left\">\n            <p-button\n              styleClass=\"p-button-success\"\n              label=\"New\"\n              icon=\"pi pi-plus\"\n              routerLink=\"form\"\n            ></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"p-grid\">\n      <div class=\"p-col-12\">\n        <p-table [value]=\"users\" styleClass=\"p-datatable-gridlines\">\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\n              <th>Email</th>\n              <th>Is Admin</th>\n              <th>Country</th>\n              <th></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-user>\n            <tr>\n              <td>{{ user.name }}</td>\n              <td>{{ user.email }}</td>\n              <td>\n                <p-tag\n                  *ngIf=\"user.isAdmin\"\n                  icon=\"pi pi-check\"\n                  severity=\"success\"\n                  [rounded]=\"true\"\n                ></p-tag>\n                <p-tag\n                  *ngIf=\"!user.isAdmin\"\n                  icon=\"pi pi-times\"\n                  severity=\"danger\"\n                  [rounded]=\"true\"\n                ></p-tag>\n              </td>\n              <td>{{ getCountryName(user.country) }}</td>\n              <td>\n                <p-button\n                  (click)=\"deleteUser(user.id)\"\n                  styleClass=\"p-button-danger p-mr-2\"\n                  icon=\"pi pi-trash\"\n                ></p-button>\n                <p-button\n                  (click)=\"updateUser(user.id)\"\n                  styleClass=\"p-button-success\"\n                  icon=\"pi pi-pencil\"\n                ></p-button>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-card>\n</div>\n<p-confirmDialog\n  [style]=\"{ width: '50vw' }\"\n  [baseZIndex]=\"10000\"\n  rejectButtonStyleClass=\"p-button-text\"\n></p-confirmDialog>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'admin-shell',\n  templateUrl: './shell.component.html'\n})\nexport class ShellComponent {\n  constructor() {}\n}\n","<div class=\"admin-wrapper\">\n  <admin-sidebar></admin-sidebar>\n  <div class=\"admin-main\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { AuthService } from '@bluebits/users';\n\n@Component({\n  selector: 'admin-sidebar',\n  templateUrl: './sidebar.component.html'\n})\nexport class SidebarComponent {\n  constructor(private authService: AuthService) {}\n\n  logoutUser() {\n    this.authService.logout();\n  }\n}\n","<div class=\"admin-sidebar\">\n  <div class=\"logo\">\n    <img src=\"/assets/images/logo.png\" />\n  </div>\n  <div class=\"links\">\n    <ul>\n      <li>\n        <a routerLink=\"/\"><i class=\"pi pi-home\"></i> Dashboard</a>\n      </li>\n      <li>\n        <a routerLink=\"/products\"><i class=\"pi pi-briefcase\"></i> Products</a>\n      </li>\n      <li>\n        <a routerLink=\"/categories\"><i class=\"pi pi-list\"></i> Categories</a>\n      </li>\n      <li>\n        <a routerLink=\"/orders\"><i class=\"pi pi-shopping-cart\"></i> Orders</a>\n      </li>\n      <li>\n        <a routerLink=\"/users\"><i class=\"pi pi-users\"></i> Users</a>\n      </li>\n      <li>\n        <a class=\"logout\"><i class=\"pi pi-sign-out\" (click)=\"logoutUser()\"></i> Logout</a>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from 'environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiUrl: 'http://localhost:3000/api/v1/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","export * from './lib/orders.module';\nexport * from './lib/models/order';\nexport * from './lib/models/order-item';\nexport * from './lib/services/orders.service';\nexport * from './lib/services/cart.service';\nexport * from './lib/models/cart';\nexport * from './lib/order.constants';\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../../services/cart.service';\n\n@Component({\n  selector: 'orders-cart-icon',\n  templateUrl: './cart-icon.component.html',\n  styles: []\n})\nexport class CartIconComponent implements OnInit {\n  cartCount = 0;\n  constructor(private cartService: CartService) {}\n\n  ngOnInit(): void {\n    this.cartService.cart$.subscribe((cart) => {\n      this.cartCount = cart?.items?.length ?? 0;\n    });\n  }\n}\n","<i\n  class=\"pi pi-shopping-cart p-mr-4 p-text-secondary\"\n  pBadge\n  style=\"font-size: 1.5rem\"\n  [value]=\"cartCount\"\n  severity=\"danger\"\n  routerLink=\"/cart\"\n></i>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { CartService } from '../../services/cart.service';\nimport { OrdersService } from '../../services/orders.service';\n\n@Component({\n  selector: 'orders-order-summary',\n  templateUrl: './order-summary.component.html',\n  styles: []\n})\nexport class OrderSummaryComponent implements OnInit, OnDestroy {\n  endSubs$: Subject<any> = new Subject();\n  totalPrice: number;\n  isCheckout = false;\n  constructor(\n    private router: Router,\n    private cartService: CartService,\n    private ordersService: OrdersService\n  ) {\n    this.router.url.includes('checkout') ? (this.isCheckout = true) : (this.isCheckout = false);\n  }\n\n  ngOnInit(): void {\n    this._getOrderSummary();\n  }\n\n  ngOnDestroy(): void {\n    this.endSubs$.next();\n    this.endSubs$.complete();\n  }\n\n  _getOrderSummary() {\n    this.cartService.cart$.pipe(takeUntil(this.endSubs$)).subscribe((cart) => {\n      this.totalPrice = 0;\n      if (cart) {\n        cart.items.map((item) => {\n          this.ordersService\n            .getProduct(item.productId)\n            .pipe(take(1))\n            .subscribe((product) => {\n              this.totalPrice += product.price * item.quantity;\n            });\n        });\n      }\n    });\n  }\n\n  navigateToCheckout() {\n    this.router.navigate(['/checkout']);\n  }\n}\n","<div class=\"order-summary\">\n  <h3>Order Summary</h3>\n  <div class=\"summary-price\">\n    <span>Items Price</span>\n    <span>{{ totalPrice | currency }}</span>\n  </div>\n  <div class=\"summary-price\">\n    <span>Packing & Shipping</span>\n    <span class=\"free\">Free</span>\n  </div>\n  <div class=\"to-checkout\">\n    <div class=\"summary-price\">\n      <span>Total Price</span>\n      <span>{{ totalPrice | currency }}</span>\n    </div>\n    <div class=\"checkout-button\" *ngIf=\"!isCheckout\">\n      <p-button label=\"Checkout\" (onClick)=\"navigateToCheckout()\"></p-button>\n    </div>\n  </div>\n</div>\n","export class Cart {\n  items?: CartItem[];\n}\n\nexport class CartItem {\n  productId?: string;\n  quantity?: number;\n}\n\nexport class CartItemDetailed {\n  product?: any;\n  quantity?: number;\n}\n","export class OrderItem {\n  product?: string;\n  quantity?: number;\n}\n","import { OrderItem } from './order-item';\n\nexport class Order {\n  id?: string;\n  orderItems?: OrderItem[];\n  shippingAddress1?: string;\n  shippingAddress2?: string;\n  city?: string;\n  zip?: string;\n  country?: string;\n  phone?: string;\n  status?: number;\n  totalPrice?: string;\n  user?: any;\n  dateOrdered?: string;\n}\n","export const ORDER_STATUS = {\n  0: {\n    label: 'Pending',\n    color: 'primary'\n  },\n  1: {\n    label: 'Processed',\n    color: 'warning'\n  },\n  2: {\n    label: 'Shipped',\n    color: 'warning'\n  },\n  3: {\n    label: 'Delivered',\n    color: 'success'\n  },\n  4: {\n    label: 'Failed',\n    color: 'danger'\n  }\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CartService } from './services/cart.service';\nimport { CartIconComponent } from './components/cart-icon/cart-icon.component';\nimport { BadgeModule } from 'primeng/badge';\nimport { CartPageComponent } from './pages/cart-page/cart-page.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ButtonModule } from 'primeng/button';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { OrderSummaryComponent } from './components/order-summary/order-summary.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CheckoutPageComponent } from './pages/checkout-page/checkout-page.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ThankYouComponent } from './pages/thank-you/thank-you.component';\nimport { AuthGuard } from '@bluebits/users';\nconst routes: Routes = [\n  {\n    path: 'cart',\n    component: CartPageComponent\n  },\n  {\n    path: 'checkout',\n    canActivate: [AuthGuard],\n    component: CheckoutPageComponent\n  },\n  {\n    path: 'success',\n    component: ThankYouComponent\n  }\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    BadgeModule,\n    RouterModule.forChild(routes),\n    ButtonModule,\n    InputNumberModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InputTextModule,\n    InputMaskModule,\n    DropdownModule\n  ],\n  providers: [],\n  declarations: [\n    CartIconComponent,\n    CartPageComponent,\n    OrderSummaryComponent,\n    CheckoutPageComponent,\n    ThankYouComponent\n  ],\n  exports: [CartIconComponent, CartPageComponent, OrderSummaryComponent]\n})\nexport class OrdersModule {\n  constructor(cartService: CartService) {\n    cartService.initCartLocalStorage();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CartItemDetailed } from '../../models/cart';\nimport { CartService } from '../../services/cart.service';\nimport { OrdersService } from '../../services/orders.service';\n@Component({\n  selector: 'orders-cart-page',\n  templateUrl: './cart-page.component.html',\n  styles: []\n})\nexport class CartPageComponent implements OnInit, OnDestroy {\n  cartItemsDetailed: CartItemDetailed[] = [];\n  cartCount = 0;\n  endSubs$: Subject<any> = new Subject();\n  constructor(\n    private router: Router,\n    private cartService: CartService,\n    private ordersService: OrdersService\n  ) {}\n\n  ngOnInit(): void {\n    this._getCartDetails();\n  }\n\n  ngOnDestroy() {\n    this.endSubs$.next();\n    this.endSubs$.complete();\n  }\n\n  private _getCartDetails() {\n    this.cartService.cart$.pipe(takeUntil(this.endSubs$)).subscribe((respCart) => {\n      this.cartItemsDetailed = [];\n      this.cartCount = respCart?.items.length ?? 0;\n      respCart.items.forEach((cartItem) => {\n        this.ordersService.getProduct(cartItem.productId).subscribe((respProduct) => {\n          this.cartItemsDetailed.push({\n            product: respProduct,\n            quantity: cartItem.quantity\n          });\n        });\n      });\n    });\n  }\n\n  backToShop() {\n    this.router.navigate(['/products']);\n  }\n\n  deleteCartItem(cartItem: CartItemDetailed) {\n    this.cartService.deleteCartItem(cartItem.product.id);\n  }\n\n  updateCartItemQuantity(event, cartItem: CartItemDetailed) {\n    this.cartService.setCartItem(\n      {\n        productId: cartItem.product.id,\n        quantity: event.value\n      },\n      true\n    );\n  }\n}\n","<div class=\"cart-page\">\n  <div class=\"p-grid\">\n    <div class=\"p-col-8\">\n      <div>\n        <p-button\n          label=\"Continue shopping\"\n          icon=\"pi pi-arrow-left\"\n          (onClick)=\"backToShop()\"\n        ></p-button>\n      </div>\n      <div>\n        <h4>My Cart: {{ cartCount }} Item(s)</h4>\n      </div>\n      <div class=\"cart-shipping p-mb-5\">\n        Shipping after the payment, Delivery time : 1 to 4 working days\n      </div>\n      <div class=\"cart-item p-mb-5\" *ngFor=\"let cartItem of cartItemsDetailed\">\n        <div class=\"p-grid p-fluid\">\n          <div class=\"p-col-2 cart-item-image\">\n            <img [src]=\"cartItem.product.image\" [attr.alt]=\"cartItem.product.name\" />\n          </div>\n          <div class=\"p-col-7\">\n            <div class=\"cart-item-name\">{{ cartItem.product.name }}</div>\n            <div class=\"cart-item-price\">{{ cartItem.product.price | currency }}</div>\n            <div class=\"cart-item-remove\">\n              <p-button icon=\"pi pi-trash\" (onClick)=\"deleteCartItem(cartItem)\"></p-button>\n            </div>\n          </div>\n          <div class=\"p-col-3\">\n            <div class=\"p-field cart-item-quantity\">\n              <p-inputNumber\n                mode=\"decimal\"\n                [showButtons]=\"true\"\n                [inputId]=\"cartItem.product.id\"\n                [min]=\"1\"\n                [max]=\"100\"\n                [(ngModel)]=\"cartItem.quantity\"\n                (onInput)=\"updateCartItemQuantity($event, cartItem)\"\n              >\n              </p-inputNumber>\n            </div>\n            <div class=\"cart-item-subtotal\">\n              Subtotal:\n              <span class=\"cart-item-subtotal-value\">{{\n                cartItem.product.price * cartItem.quantity | currency\n              }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"p-col-4\">\n      <orders-order-summary></orders-order-summary>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UsersService } from '@bluebits/users';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { Cart } from '../../models/cart';\nimport { Order } from '../../models/order';\nimport { OrderItem } from '../../models/order-item';\nimport { CartService } from '../../services/cart.service';\nimport { OrdersService } from '../../services/orders.service';\n\n@Component({\n  selector: 'orders-checkout-page',\n  templateUrl: './checkout-page.component.html'\n})\nexport class CheckoutPageComponent implements OnInit, OnDestroy {\n  constructor(\n    private router: Router,\n    private usersService: UsersService,\n    private formBuilder: FormBuilder,\n    private cartService: CartService,\n    private ordersService: OrdersService\n  ) {}\n  checkoutFormGroup: FormGroup;\n  isSubmitted = false;\n  orderItems: OrderItem[] = [];\n  userId: string;\n  countries = [];\n  unsubscribe$: Subject<any> = new Subject();\n\n  ngOnInit(): void {\n    this._initCheckoutForm();\n    this._autoFillUserData();\n    this._getCartItems();\n    this._getCountries();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  private _initCheckoutForm() {\n    this.checkoutFormGroup = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.email, Validators.required]],\n      phone: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      zip: ['', Validators.required],\n      apartment: ['', Validators.required],\n      street: ['', Validators.required]\n    });\n  }\n\n  private _autoFillUserData() {\n    this.usersService\n      .observeCurrentUser()\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((user) => {\n        if (user) {\n          this.userId = user.id;\n          this.checkoutForm.name.setValue(user.name);\n          this.checkoutForm.email.setValue(user.email);\n          this.checkoutForm.phone.setValue(user.phone);\n          this.checkoutForm.city.setValue(user.city);\n          this.checkoutForm.street.setValue(user.street);\n          this.checkoutForm.country.setValue(user.country);\n          this.checkoutForm.zip.setValue(user.zip);\n          this.checkoutForm.apartment.setValue(user.apartment);\n        }\n      });\n  }\n\n  private _getCartItems() {\n    const cart: Cart = this.cartService.getCart();\n    this.orderItems = cart.items.map((item) => {\n      return {\n        product: item.productId,\n        quantity: item.quantity\n      };\n    });\n  }\n\n  private _getCountries() {\n    this.countries = this.usersService.getCountries();\n  }\n\n  backToCart() {\n    this.router.navigate(['/cart']);\n  }\n\n  placeOrder() {\n    this.isSubmitted = true;\n    if (this.checkoutFormGroup.invalid) {\n      return;\n    }\n\n    const order: Order = {\n      orderItems: this.orderItems,\n      shippingAddress1: this.checkoutForm.street.value,\n      shippingAddress2: this.checkoutForm.apartment.value,\n      city: this.checkoutForm.city.value,\n      zip: this.checkoutForm.zip.value,\n      country: this.checkoutForm.country.value,\n      phone: this.checkoutForm.phone.value,\n      status: 0,\n      user: this.userId,\n      dateOrdered: `${Date.now()}`\n    };\n\n    this.ordersService.createOrder(order).subscribe(\n      () => {\n        //redirect to thank you page // payment\n        this.cartService.emptyCart();\n        this.router.navigate(['/success']);\n      },\n      () => {\n        //display some message to user\n      }\n    );\n  }\n\n  get checkoutForm() {\n    return this.checkoutFormGroup.controls;\n  }\n}\n","<div class=\"checkout-page\">\n  <div>\n    <p-button label=\"Back to cart\" icon=\"pi pi-arrow-left\" (onClick)=\"backToCart()\"></p-button>\n  </div>\n  <div class=\"p-grid checkout-form\">\n    <div class=\"p-col-8\">\n      <form [formGroup]=\"checkoutFormGroup\">\n        <div class=\"p-fluid p-formgrid p-grid\">\n          <div class=\"p-field p-col-4\">\n            <label for=\"name\">Name</label>\n            <input formControlName=\"name\" id=\"name\" type=\"text\" pInputText />\n            <small *ngIf=\"checkoutForm.name.invalid && isSubmitted\" class=\"p-error\"\n              >Name is required</small\n            >\n          </div>\n          <div class=\"p-field p-col-4\">\n            <label for=\"email\">Email</label>\n            <input formControlName=\"email\" id=\"email\" type=\"text\" pInputText />\n            <small *ngIf=\"checkoutForm.email.invalid && isSubmitted\" class=\"p-error\"\n              ><span *ngIf=\"checkoutForm.email.errors.required\">email is required</span>\n              <span *ngIf=\"checkoutForm.email.errors.email\">email is invalid</span></small\n            >\n          </div>\n          <div class=\"p-field p-col-4\">\n            <label for=\"color\">Phone</label><br />\n            <p-inputMask\n              mask=\"(999) 999-9999\"\n              formControlName=\"phone\"\n              placeholder=\"(999) 999-9999\"\n            ></p-inputMask>\n            <small *ngIf=\"checkoutForm.phone.invalid && isSubmitted\" class=\"p-error\"\n              >phone is required</small\n            >\n          </div>\n        </div>\n        <div class=\"p-fluid p-formgrid p-grid\">\n          <div class=\"p-field p-col-4\">\n            <label for=\"street\">Street</label>\n            <input formControlName=\"street\" id=\"street\" type=\"text\" pInputText />\n            <small *ngIf=\"checkoutForm.street.invalid && isSubmitted\" class=\"p-error\"\n              >Street is required</small\n            >\n          </div>\n          <div class=\"p-field p-col-4\">\n            <label for=\"street\">Apartment</label>\n            <input formControlName=\"apartment\" id=\"apartment\" type=\"text\" pInputText />\n            <small *ngIf=\"checkoutForm.apartment.invalid && isSubmitted\" class=\"p-error\"\n              >Apartment is required</small\n            >\n          </div>\n          <div class=\"p-field p-col-4\">\n            <label for=\"street\">Zip Code</label>\n            <input formControlName=\"zip\" id=\"zip\" type=\"text\" pInputText />\n            <small *ngIf=\"checkoutForm.zip.invalid && isSubmitted\" class=\"p-error\"\n              >Zip is required</small\n            >\n          </div>\n          <div class=\"p-field p-col-4\">\n            <label for=\"city\">City</label>\n            <input formControlName=\"city\" id=\"city\" type=\"text\" pInputText />\n            <small *ngIf=\"checkoutForm.city.invalid && isSubmitted\" class=\"p-error\"\n              >City is required</small\n            >\n          </div>\n          <div class=\"p-field p-col-4\">\n            <label for=\"country\">Country</label><br />\n            <p-dropdown\n              [options]=\"countries\"\n              formControlName=\"country\"\n              optionLabel=\"name\"\n              optionValue=\"id\"\n              [filter]=\"true\"\n              filterBy=\"name\"\n              [showClear]=\"true\"\n              placeholder=\"Select a Country\"\n            ></p-dropdown>\n            <small *ngIf=\"checkoutForm.country.invalid && isSubmitted\" class=\"p-error\"\n              >Country is required</small\n            >\n          </div>\n        </div>\n      </form>\n    </div>\n    <div class=\"p-col-4\">\n      <orders-order-summary></orders-order-summary>\n      <div class=\"checkout-button\">\n        <p-button label=\"Place-Order\" (onClick)=\"placeOrder()\"></p-button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'orders-thank-you-page',\n  templateUrl: './thank-you.component.html',\n  styles: []\n})\nexport class ThankYouComponent {\n  constructor() {}\n}\n","<div class=\"checkout-page\">\n  <div class=\"thankyou-page\">\n    <h2>Thank you for Shopping with us!</h2>\n    <h3>We have recieved your order and it will be delivered in the next 3 days</h3>\n    <p-button label=\"Back to shop\" routerLink=\"/\"></p-button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Cart, CartItem } from '../models/cart';\n\nexport const CART_KEY = 'cart';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  cart$: BehaviorSubject<Cart> = new BehaviorSubject(this.getCart());\n\n  constructor() {}\n\n  initCartLocalStorage() {\n    const cart: Cart = this.getCart();\n    if (!cart) {\n      const intialCart = {\n        items: []\n      };\n      const intialCartJson = JSON.stringify(intialCart);\n      localStorage.setItem(CART_KEY, intialCartJson);\n    }\n  }\n\n  emptyCart() {\n    const intialCart = {\n      items: []\n    };\n    const intialCartJson = JSON.stringify(intialCart);\n    localStorage.setItem(CART_KEY, intialCartJson);\n    this.cart$.next(intialCart);\n  }\n\n  getCart(): Cart {\n    const cartJsonString: string = localStorage.getItem(CART_KEY);\n    const cart: Cart = JSON.parse(cartJsonString);\n    return cart;\n  }\n\n  setCartItem(cartItem: CartItem, updateCartItem?: boolean): Cart {\n    const cart = this.getCart();\n    const cartItemExist = cart.items.find((item) => item.productId === cartItem.productId);\n    if (cartItemExist) {\n      cart.items.map((item) => {\n        if (item.productId === cartItem.productId) {\n          if (updateCartItem) {\n            item.quantity = cartItem.quantity;\n          } else {\n            item.quantity = item.quantity + cartItem.quantity;\n          }\n\n          return item;\n        }\n      });\n    } else {\n      cart.items.push(cartItem);\n    }\n\n    const cartJson = JSON.stringify(cart);\n    localStorage.setItem(CART_KEY, cartJson);\n    this.cart$.next(cart);\n    return cart;\n  }\n\n  deleteCartItem(productId: string) {\n    const cart = this.getCart();\n    const newCart = cart.items.filter((item) => item.productId !== productId);\n\n    cart.items = newCart;\n\n    const cartJsonString = JSON.stringify(cart);\n    localStorage.setItem(CART_KEY, cartJsonString);\n\n    this.cart$.next(cart);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Order } from '../models/order';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  apiURLOrders = environment.apiUrl + 'orders';\n  apiURLProducts = environment.apiUrl + 'products';\n\n  constructor(private http: HttpClient) {}\n\n  getOrders(): Observable<Order[]> {\n    return this.http.get<Order[]>(this.apiURLOrders);\n  }\n\n  getOrder(orderId: string): Observable<Order> {\n    return this.http.get<Order>(`${this.apiURLOrders}/${orderId}`);\n  }\n\n  createOrder(order: Order): Observable<Order> {\n    return this.http.post<Order>(this.apiURLOrders, order);\n  }\n\n  updateOrder(orderStaus: { status: string }, orderId: string): Observable<Order> {\n    return this.http.put<Order>(`${this.apiURLOrders}/${orderId}`, orderStaus);\n  }\n\n  deleteOrder(orderId: string): Observable<any> {\n    return this.http.delete<any>(`${this.apiURLOrders}/${orderId}`);\n  }\n\n  getOrdersCount(): Observable<number> {\n    return this.http\n      .get<number>(`${this.apiURLOrders}/get/count`)\n      .pipe(map((objectValue: any) => objectValue.orderCount));\n  }\n\n  getTotalSales(): Observable<number> {\n    return this.http\n      .get<number>(`${this.apiURLOrders}/get/totalsales`)\n      .pipe(map((objectValue: any) => objectValue.totalsales));\n  }\n\n  getProduct(productId: string): Observable<any> {\n    return this.http.get<any>(`${this.apiURLProducts}/${productId}`);\n  }\n}\n","export * from './lib/products.module';\nexport * from './lib/services/categories.service';\nexport * from './lib/services/products.service';\nexport * from './lib/models/category';\nexport * from './lib/models/product';\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Category } from '../../models/category';\nimport { CategoriesService } from '../../services/categories.service';\n\n@Component({\n  selector: 'products-categories-banner',\n  templateUrl: './categories-banner.component.html',\n  styles: []\n})\nexport class CategoriesBannerComponent implements OnInit, OnDestroy {\n  categories: Category[] = [];\n  endSubs$: Subject<any> = new Subject();\n\n  constructor(private categoriesService: CategoriesService) {}\n\n  ngOnInit(): void {\n    this.categoriesService\n      .getCategories()\n      .pipe(takeUntil(this.endSubs$))\n      .subscribe((categories) => {\n        this.categories = categories;\n      });\n  }\n\n  ngOnDestroy() {\n    this.endSubs$.next();\n    this.endSubs$.complete();\n  }\n}\n","<div class=\"categories-banner\">\n  <h3>Categories</h3>\n  <div class=\"p-grid\">\n    <div class=\"p-col-2\" *ngFor=\"let category of categories\">\n      <div\n        class=\"category\"\n        [routerLink]=\"'/category/' + category.id\"\n        [ngStyle]=\"{ backgroundColor: category.color }\"\n      >\n        <div class=\"category-icon\">\n          <i class=\"pi pi-{{ category.icon }}\"></i>\n        </div>\n        <div class=\"category-name\">{{ category.name }}</div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Product } from '../../models/product';\nimport { ProductsService } from '../../services/products.service';\n\n@Component({\n  selector: 'products-featured-products',\n  templateUrl: './featured-products.component.html',\n  styles: []\n})\nexport class FeaturedProductsComponent implements OnInit, OnDestroy {\n  featuredProducts: Product[] = [];\n  endSubs$: Subject<any> = new Subject();\n\n  constructor(private prodService: ProductsService) {}\n\n  ngOnInit(): void {\n    this._getFeaturedProducts();\n  }\n\n  ngOnDestroy(): void {\n    this.endSubs$.next();\n    this.endSubs$.complete();\n  }\n\n  private _getFeaturedProducts() {\n    this.prodService\n      .getFeaturedProducts(4)\n      .pipe(takeUntil(this.endSubs$))\n      .subscribe((products) => {\n        this.featuredProducts = products;\n      });\n  }\n}\n","<div class=\"featured-products p-mt-5\">\n  <h3 class=\"p-mb-1\">Feautured Products</h3>\n  <div class=\"p-grid\">\n    <div class=\"p-col-3\" *ngFor=\"let product of featuredProducts\">\n      <products-product-item [product]=\"product\"></products-product-item>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CartService, CartItem } from '@bluebits/orders';\nimport { Product } from '../../models/product';\n\n@Component({\n  selector: 'products-product-item',\n  templateUrl: './product-item.component.html',\n  styles: []\n})\nexport class ProductItemComponent implements OnInit {\n  @Input() product: Product;\n\n  constructor(private cartService: CartService) {}\n\n  ngOnInit(): void {}\n\n  addProductToCart() {\n    const cartItem: CartItem = {\n      productId: this.product.id,\n      quantity: 1\n    };\n    this.cartService.setCartItem(cartItem);\n  }\n}\n","<div class=\"product-item\" *ngIf=\"product\">\n  <div class=\"product-item-wrapper\">\n    <img [routerLink]=\"'/products/' + product.id\" [src]=\"product.image\" class=\"image\" alt=\"\" />\n    <h4 class=\"name\">{{ product.name }}</h4>\n    <h5 class=\"price\">{{ product.price | currency }}</h5>\n    <p-button\n      styleClass=\"p-mt-3 add-to-cart\"\n      label=\"Add to cart\"\n      icon=\"pi pi-shopping-cart\"\n      (onClick)=\"addProductToCart()\"\n    ></p-button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'products-search',\n  templateUrl: './products-search.component.html',\n  styles: [\n  ]\n})\nexport class ProductsSearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"products-search\">\n  <i class=\"pi pi-search\"></i>\n  <input\n    type=\"text\"\n    placeholder=\"Find products\"\n    class=\"products-search-input\"\n    name=\"search\"\n    id=\"search\"\n  />\n</div>\n","export class Category {\n  id?: string;\n  name?: string;\n  icon?: string;\n  color?: string;\n  checked?: boolean;\n}\n","import { Category } from './category';\n\nexport class Product {\n  id?: string;\n  name?: string;\n  description?: string;\n  richDescription?: string;\n  image?: string;\n  images?: string[];\n  brand?: string;\n  price?: number;\n  category?: Category;\n  countInStock?: number;\n  rating?: number;\n  numReviews?: number;\n  isFeatured?: boolean;\n  dateCreated?: string;\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CartItem, CartService } from '@bluebits/orders';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Product } from '../../models/product';\nimport { ProductsService } from '../../services/products.service';\n\n@Component({\n  selector: 'products-product-page',\n  templateUrl: './product-page.component.html',\n  styles: []\n})\nexport class ProductPageComponent implements OnInit, OnDestroy {\n  product: Product;\n  endSubs$: Subject<any> = new Subject();\n  quantity = 1;\n\n  constructor(\n    private prodService: ProductsService,\n    private route: ActivatedRoute,\n    private cartService: CartService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      if (params.productid) {\n        this._getProduct(params.productid);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.endSubs$.next();\n    this.endSubs$.complete();\n  }\n\n  addProductToCart() {\n    const cartItem: CartItem = {\n      productId: this.product.id,\n      quantity: this.quantity\n    };\n\n    this.cartService.setCartItem(cartItem);\n  }\n\n  private _getProduct(id: string) {\n    this.prodService\n      .getProduct(id)\n      .pipe(takeUntil(this.endSubs$))\n      .subscribe((resProduct) => {\n        this.product = resProduct;\n      });\n  }\n}\n","<div class=\"product-page\" *ngIf=\"product\">\n  <div class=\"p-grid\">\n    <div class=\"p-col-6\">\n      <ui-gallery [images]=\"product.images\"></ui-gallery>\n    </div>\n    <div class=\"p-col-6 product\">\n      <h2 class=\"product-name\">{{ product.name }}</h2>\n      <p class=\"product-desc\">\n        {{ product.description }}\n      </p>\n      <div class=\"product-rating\">\n        <p-rating [(ngModel)]=\"product.rating\" [cancel]=\"false\" [disabled]=\"true\"></p-rating>\n      </div>\n      <div class=\"product-price\">\n        {{ product.price | currency }}\n        <span class=\"price-before\">{{ product.price + 18 | currency }}</span>\n      </div>\n      <div class=\"product-quantity\">\n        <div class=\"p-field p-col-12 p-md-3 p-p-0\">\n          <label for=\"quantity\">Quantity</label>\n          <p-inputNumber\n            [(ngModel)]=\"quantity\"\n            mode=\"decimal\"\n            [showButtons]=\"true\"\n            inputId=\"quantity\"\n            [min]=\"1\"\n            [max]=\"100\"\n          >\n          </p-inputNumber>\n        </div>\n      </div>\n      <div class=\"product-actions\">\n        <button\n          pButton\n          pRipple\n          type=\"button\"\n          label=\"Buy Now\"\n          class=\"p-button-rounded p-mr-2\"\n        ></button>\n        <button\n          pButton\n          pRipple\n          type=\"button\"\n          label=\"Add to Cart\"\n          class=\"p-button-rounded\"\n          (click)=\"addProductToCart()\"\n        ></button>\n      </div>\n    </div>\n  </div>\n  <div class=\"p-grid product-rich-desc\">\n    <div class=\"p-col-12\">\n      <div [innerHTML]=\"product.richDescription\"></div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Category } from '../../models/category';\nimport { Product } from '../../models/product';\nimport { CategoriesService } from '../../services/categories.service';\nimport { ProductsService } from '../../services/products.service';\n\n@Component({\n  selector: 'products-list',\n  templateUrl: './products-list.component.html',\n  styles: []\n})\nexport class ProductsListComponent implements OnInit {\n  products: Product[] = [];\n  categories: Category[] = [];\n  isCategoryPage: boolean;\n\n  constructor(\n    private prodService: ProductsService,\n    private catService: CategoriesService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      params.categoryid ? this._getProducts([params.categoryid]) : this._getProducts();\n      params.categoryid ? (this.isCategoryPage = true) : (this.isCategoryPage = false);\n    });\n    this._getCategories();\n  }\n\n  private _getProducts(categoriesFilter?: string[]) {\n    this.prodService.getProducts(categoriesFilter).subscribe((resProducts) => {\n      this.products = resProducts;\n    });\n  }\n\n  private _getCategories() {\n    this.catService.getCategories().subscribe((resCats) => {\n      this.categories = resCats;\n    });\n  }\n\n  categoryFilter() {\n    const selectedCategories = this.categories\n      .filter((category) => category.checked)\n      .map((category) => category.id);\n\n    this._getProducts(selectedCategories);\n  }\n}\n","<div class=\"products-page\">\n  <div class=\"p-grid\">\n    <div class=\"p-col-3\" *ngIf=\"!isCategoryPage\">\n      <h4>Categories</h4>\n      <div class=\"p-field-checkbox\" *ngFor=\"let category of categories\">\n        <p-checkbox\n          [(ngModel)]=\"category.checked\"\n          binary=\"true\"\n          [inputId]=\"category.id\"\n          (onChange)=\"categoryFilter()\"\n        ></p-checkbox>\n        <label for=\"{{ category.id }}\">{{ category.name }}</label>\n      </div>\n    </div>\n    <div [ngClass]=\"{ 'p-col-9': !isCategoryPage, 'p-col-12': isCategoryPage }\">\n      <div class=\"p-grid\" *ngIf=\"products\">\n        <div\n          [ngClass]=\"{ 'p-col-4': !isCategoryPage, 'p-col-3': isCategoryPage }\"\n          *ngFor=\"let product of products\"\n        >\n          <products-product-item [product]=\"product\"></products-product-item>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrdersModule } from '@bluebits/orders';\nimport { ProductsSearchComponent } from './components/products-search/products-search.component';\nimport { CategoriesBannerComponent } from './components/categories-banner/categories-banner.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductItemComponent } from './components/product-item/product-item.component';\nimport { FeaturedProductsComponent } from './components/featured-products/featured-products.component';\nimport { ButtonModule } from 'primeng/button';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { RatingModule } from 'primeng/rating';\nimport { ProductsListComponent } from './pages/products-list/products-list.component';\nimport { FormsModule } from '@angular/forms';\nimport { ProductPageComponent } from './pages/product-page/product-page.component';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { UiModule } from '@bluebits/ui';\n\nconst routes: Routes = [\n  {\n    path: 'products',\n    component: ProductsListComponent\n  },\n  {\n    path: 'category/:categoryid',\n    component: ProductsListComponent\n  },\n  {\n    path: 'products/:productid',\n    component: ProductPageComponent\n  }\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    OrdersModule,\n    RouterModule.forChild(routes),\n    ButtonModule,\n    CheckboxModule,\n    FormsModule,\n    RatingModule,\n    InputNumberModule,\n    UiModule\n  ],\n  declarations: [\n    ProductsSearchComponent,\n    CategoriesBannerComponent,\n    ProductItemComponent,\n    FeaturedProductsComponent,\n    ProductsListComponent,\n    ProductPageComponent\n  ],\n  exports: [\n    ProductsSearchComponent,\n    CategoriesBannerComponent,\n    ProductItemComponent,\n    FeaturedProductsComponent,\n    ProductsListComponent,\n    ProductPageComponent\n  ]\n})\nexport class ProductsModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Category } from '../models/category';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n  apiURLCategories = environment.apiUrl + 'categories';\n\n  constructor(private http: HttpClient) {}\n\n  getCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.apiURLCategories);\n  }\n\n  getCategory(categoryId: string): Observable<Category> {\n    return this.http.get<Category>(`${this.apiURLCategories}/${categoryId}`);\n  }\n\n  createCategory(category: Category): Observable<Category> {\n    return this.http.post<Category>(this.apiURLCategories, category);\n  }\n\n  updateCategory(category: Category): Observable<Category> {\n    return this.http.put<Category>(`${this.apiURLCategories}/${category.id}`, category);\n  }\n\n  deleteCategory(categoryId: string): Observable<any> {\n    return this.http.delete<any>(`${this.apiURLCategories}/${categoryId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '@env/environment';\nimport { Product } from '../models/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n  apiURLProducts = environment.apiUrl + 'products';\n\n  constructor(private http: HttpClient) {}\n\n  getProducts(categoriesFilter?: string[]): Observable<Product[]> {\n    let params = new HttpParams();\n    if (categoriesFilter) {\n      params = params.append('categories', categoriesFilter.join(','));\n    }\n    return this.http.get<Product[]>(this.apiURLProducts, { params: params });\n  }\n\n  createProduct(productData: FormData): Observable<Product> {\n    return this.http.post<Product>(this.apiURLProducts, productData);\n  }\n\n  getProduct(productId: string): Observable<Product> {\n    return this.http.get<Product>(`${this.apiURLProducts}/${productId}`);\n  }\n\n  updateProduct(productData: FormData, productid: string): Observable<Product> {\n    return this.http.put<Product>(`${this.apiURLProducts}/${productid}`, productData);\n  }\n\n  deleteProduct(productId: string): Observable<any> {\n    return this.http.delete<any>(`${this.apiURLProducts}/${productId}`);\n  }\n\n  getProductsCount(): Observable<number> {\n    return this.http\n      .get<number>(`${this.apiURLProducts}/get/count`)\n      .pipe(map((objectValue: any) => objectValue.productCount));\n  }\n\n  getFeaturedProducts(count: number): Observable<Product[]> {\n    return this.http.get<Product[]>(`${this.apiURLProducts}/get/featured/${count}`);\n  }\n}\n","export * from './lib/ui.module';\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ui-banner',\n  templateUrl: './banner.component.html',\n  styles: []\n})\nexport class BannerComponent {\n  constructor() {}\n}\n","<div class=\"banner\">\n  <div class=\"p-grid\">\n    <div class=\"p-col-5 p-offset-1 banner-text\">\n      <h1>The Best Products</h1>\n      <h2>in Every Category</h2>\n      <p-button\n        styleClass=\"p-mt-4 banner-button\"\n        label=\"See more\"\n        icon=\"pi pi-chevron-right\"\n        iconPos=\"right\"\n      ></p-button>\n    </div>\n    <div class=\"p-col-6 banner-image animate__animated animate__slideInLeft\">\n      <img src=\"assets/images/banner-image.svg\" alt=\"\" />\n    </div>\n  </div>\n</div>\n","<div class=\"gallery\" *ngIf=\"hasImages\">\n  <div class=\"main-image\">\n    <img [src]=\"selectedImageUrl\" alt=\"\" />\n  </div>\n  <div class=\"images\">\n    <ul>\n      <li\n        *ngFor=\"let imageUrl of images\"\n        (click)=\"changeSelectedImage(imageUrl)\"\n        [ngStyle]=\"{ 'background-image': 'url(' + imageUrl + ')' }\"\n      ></li>\n    </ul>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ui-gallery',\n  templateUrl: './gallery.component.html',\n  styles: []\n})\nexport class GalleryComponent implements OnInit {\n  selectedImageUrl: string;\n\n  @Input() images: string[];\n\n  ngOnInit(): void {\n    if (this.hasImages) {\n      this.selectedImageUrl = this.images[0];\n    }\n  }\n\n  changeSelectedImage(imageUrl: string) {\n    this.selectedImageUrl = imageUrl;\n  }\n\n  get hasImages() {\n    return this.images?.length > 0;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BannerComponent } from './components/banner/banner.component';\nimport { ButtonModule } from 'primeng/button';\nimport { GalleryComponent } from './components/gallery/gallery.component';\n@NgModule({\n  imports: [CommonModule, ButtonModule],\n  declarations: [BannerComponent, GalleryComponent],\n  exports: [BannerComponent, GalleryComponent]\n})\nexport class UiModule {}\n","export * from './lib/state/users.actions';\nexport * from './lib/state/users.reducer';\nexport * from './lib/state/users.selectors';\nexport * from './lib/state/users.models';\nexport * from './lib/state/users.facade';\nexport * from './lib/users.module';\nexport * from './lib/services/users.service';\nexport * from './lib/models/user';\nexport * from './lib/services/auth-guard.service';\nexport * from './lib/services/jwt.interceptor';\nexport * from './lib/services/auth.service';\n","export class User {\n    id?: string;\n    name?: string;\n    password?: string;\n    email: string;\n    phone?: string;\n    token?: string;\n    isAdmin?: true;\n    street?: string;\n    apartment?: string;\n    zip?: string;\n    city?: string;\n    country?: string;\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { LocalstorageService } from '../../services/localstorage.service';\n\n@Component({\n  selector: 'users-login',\n  templateUrl: './login.component.html',\n  styles: []\n})\nexport class LoginComponent implements OnInit {\n  loginFormGroup: FormGroup;\n  isSubmitted = false;\n  authError = false;\n  authMessage = 'Email or Password are wrong';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private auth: AuthService,\n    private localstorageService: LocalstorageService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this._initLoginForm();\n  }\n\n  private _initLoginForm() {\n    this.loginFormGroup = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n\n    if (this.loginFormGroup.invalid) return;\n\n    this.auth.login(this.loginForm.email.value, this.loginForm.password.value).subscribe(\n      (user) => {\n        this.authError = false;\n        this.localstorageService.setToken(user.token);\n        this.router.navigate(['/']);\n      },\n      (error: HttpErrorResponse) => {\n        this.authError = true;\n        if (error.status !== 400) {\n          this.authMessage = 'Error in the Server, please try again later!';\n        }\n      }\n    );\n  }\n\n  get loginForm() {\n    return this.loginFormGroup.controls;\n  }\n}\n","<div class=\"login-register\">\n  <div class=\"login-register-panel\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-6\">\n        <img src=\"assets/images/login-photo.png\" />\n      </div>\n      <div class=\"p-col-6 p-p-5\">\n        <h3>Welcome!</h3>\n        <h2>Login Page</h2>\n        <form [formGroup]=\"loginFormGroup\">\n          <div class=\"p-grid p-mt-6\">\n            <div class=\"p-col-12\">\n              <div class=\"p-inputgroup\">\n                <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\n                <input type=\"text\" formControlName=\"email\" pInputText placeholder=\"Email\" />\n              </div>\n              <small *ngIf=\"loginForm.email.invalid && isSubmitted\" class=\"p-error\"\n                ><span *ngIf=\"loginForm.email.errors.required\">email is required</span>\n                <span *ngIf=\"loginForm.email.errors.email\">email is invalid</span></small\n              >\n            </div>\n            <div class=\"p-col-12\">\n              <div class=\"p-inputgroup\">\n                <span class=\"p-inputgroup-addon\"><i class=\"pi pi-lock\"></i></span>\n                <input\n                  type=\"password\"\n                  formControlName=\"password\"\n                  pInputText\n                  placeholder=\"Password\"\n                />\n              </div>\n              <small *ngIf=\"loginForm.password.invalid && isSubmitted\" class=\"p-error\"\n                >Password is required\n              </small>\n            </div>\n            <div class=\"p-col-12\">\n              <p-button label=\"Submit\" styleClass=\"full-btn\" (onClick)=\"onSubmit()\"></p-button>\n            </div>\n            <div class=\"p-col-12\" *ngIf=\"isSubmitted && authError\">\n              <small class=\"p-error\">{{ authMessage }}</small>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { LocalstorageService } from './localstorage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private localStorageToken: LocalstorageService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const token = this.localStorageToken.getToken();\n\n    if (token) {\n      const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n      if (tokenDecode.isAdmin && !this._tokenExpired(tokenDecode.exp)) return true;\n    }\n\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  private _tokenExpired(expiration): boolean {\n    return Math.floor(new Date().getTime() / 1000) >= expiration;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user';\nimport { LocalstorageService } from './localstorage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  apiURLUsers = environment.apiUrl + 'users';\n\n  constructor(\n    private http: HttpClient,\n    private token: LocalstorageService,\n    private router: Router\n  ) {}\n\n  login(email: string, password: string): Observable<User> {\n    return this.http.post<User>(`${this.apiURLUsers}/login`, { email, password });\n  }\n\n  logout() {\n    this.token.removeToken();\n    this.router.navigate(['/login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LocalstorageService } from './localstorage.service';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private localstorageToken: LocalstorageService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const token = this.localstorageToken.getToken();\n    const isAPIUrl = request.url.startsWith(environment.apiUrl);\n\n    if (token && isAPIUrl) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nconst TOKEN = 'jwtToken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalstorageService {\n  setToken(data) {\n    localStorage.setItem(TOKEN, data);\n  }\n\n  getToken(): string {\n    return localStorage.getItem(TOKEN);\n  }\n\n  removeToken() {\n    localStorage.removeItem(TOKEN);\n  }\n\n  isValidToken() {\n    const token = this.getToken();\n    if (token) {\n      const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n      return !this._tokenExpired(tokenDecode.exp);\n    } else {\n      return false;\n    }\n  }\n\n  getUserIdFromToken() {\n    const token = this.getToken();\n    if (token) {\n      const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n      if (tokenDecode) {\n        return tokenDecode.userId;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  private _tokenExpired(expiration): boolean {\n    return Math.floor(new Date().getTime() / 1000) >= expiration;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../models/user';\nimport { environment } from '@env/environment';\nimport * as countriesLib from 'i18n-iso-countries';\nimport { UsersFacade } from '../state/users.facade';\ndeclare const require;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  apiURLUsers = environment.apiUrl + 'users';\n\n  constructor(private http: HttpClient, private usersFacade: UsersFacade) {\n    countriesLib.registerLocale(require('i18n-iso-countries/langs/en.json'));\n  }\n\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.apiURLUsers);\n  }\n\n  getUser(userId: string): Observable<User> {\n    return this.http.get<User>(`${this.apiURLUsers}/${userId}`);\n  }\n\n  createUser(user: User): Observable<User> {\n    return this.http.post<User>(this.apiURLUsers, user);\n  }\n\n  updateUser(user: User): Observable<User> {\n    return this.http.put<User>(`${this.apiURLUsers}/${user.id}`, user);\n  }\n\n  deleteUser(userId: string): Observable<any> {\n    return this.http.delete<any>(`${this.apiURLUsers}/${userId}`);\n  }\n\n  getUsersCount(): Observable<number> {\n    return this.http\n      .get<number>(`${this.apiURLUsers}/get/count`)\n      .pipe(map((objectValue: any) => objectValue.userCount));\n  }\n\n  getCountries(): { id: string; name: string }[] {\n    return Object.entries(countriesLib.getNames('en', { select: 'official' })).map((entry) => {\n      return {\n        id: entry[0],\n        name: entry[1]\n      };\n    });\n  }\n\n  getCountry(countryKey: string): string {\n    return countriesLib.getName(countryKey, 'en');\n  }\n\n  initAppSession() {\n    this.usersFacade.buildUserSession();\n  }\n\n  observeCurrentUser() {\n    return this.usersFacade.currentUser$;\n  }\n\n  isCurrentUserAuth() {\n    return this.usersFacade.isAuthenticated$;\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { User } from '../models/user';\n\nexport const buildUserSession = createAction('[Users] Build User Session');\n\nexport const buildUserSessionSuccess = createAction(\n  '[Users] Build User Session Success',\n  props<{ user: User }>()\n);\n\nexport const buildUserSessionFailed = createAction('[Users] Build User Session Failed');\n","import { Injectable } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { fetch } from '@nrwl/angular';\n\nimport * as UsersFeature from './users.reducer';\nimport * as UsersActions from './users.actions';\nimport { catchError, concatMap, map } from 'rxjs/operators';\nimport { LocalstorageService } from '../services/localstorage.service';\nimport { of } from 'rxjs';\nimport { UsersService } from '../services/users.service';\n\n@Injectable()\nexport class UsersEffects {\n  buildUserSession$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UsersActions.buildUserSession),\n      concatMap(() => {\n        if (this.localstorageService.isValidToken()) {\n          const userId = this.localstorageService.getUserIdFromToken();\n          if (userId) {\n            return this.usersService.getUser(userId).pipe(\n              map((user) => {\n                return UsersActions.buildUserSessionSuccess({ user: user });\n              }),\n              catchError(() => of(UsersActions.buildUserSessionFailed()))\n            );\n          } else {\n            return of(UsersActions.buildUserSessionFailed());\n          }\n        } else {\n          return of(UsersActions.buildUserSessionFailed());\n        }\n      })\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private localstorageService: LocalstorageService,\n    private usersService: UsersService\n  ) {}\n}\n","import { Injectable } from '@angular/core';\n\nimport { select, Store } from '@ngrx/store';\n\nimport * as UsersActions from './users.actions';\nimport * as UsersSelectors from './users.selectors';\n\n@Injectable()\nexport class UsersFacade {\n  currentUser$ = this.store.pipe(select(UsersSelectors.getUser));\n  isAuthenticated$ = this.store.pipe(select(UsersSelectors.getUserIsAuth));\n\n  constructor(private store: Store) {}\n\n  buildUserSession() {\n    this.store.dispatch(UsersActions.buildUserSession());\n  }\n}\n","import { createReducer, on, Action } from '@ngrx/store';\n\nimport * as UsersActions from './users.actions';\nimport { User } from '../models/user';\n\nexport const USERS_FEATURE_KEY = 'users';\n\nexport interface UsersState {\n  user: User;\n  isAuthenticated: boolean;\n}\n\nexport interface UsersPartialState {\n  readonly [USERS_FEATURE_KEY]: UsersState;\n}\n\nexport const initialUsersState: UsersState = {\n  user: null,\n  isAuthenticated: false\n};\n\nconst usersReducer = createReducer(\n  initialUsersState,\n  on(UsersActions.buildUserSession, (state) => ({ ...state })),\n  on(UsersActions.buildUserSessionSuccess, (state, action) => ({\n    ...state,\n    user: action.user,\n    isAuthenticated: true\n  })),\n  on(UsersActions.buildUserSessionFailed, (state) => ({\n    ...state,\n    user: null,\n    isAuthenticated: false\n  }))\n);\n\nexport function reducer(state: UsersState | undefined, action: Action) {\n  return usersReducer(state, action);\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { USERS_FEATURE_KEY, UsersPartialState, UsersState } from './users.reducer';\n\n// Lookup the 'Users' feature state managed by NgRx\nexport const getUsersState = createFeatureSelector<UsersPartialState, UsersState>(\n  USERS_FEATURE_KEY\n);\n\nexport const getUser = createSelector(getUsersState, (state) => state.user);\n\nexport const getUserIsAuth = createSelector(getUsersState, (state) => state.isAuthenticated);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport * as fromUsers from './state/users.reducer';\nimport { UsersEffects } from './state/users.effects';\nimport { UsersFacade } from './state/users.facade';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    InputTextModule,\n    ButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    StoreModule.forFeature(fromUsers.USERS_FEATURE_KEY, fromUsers.reducer),\n    EffectsModule.forFeature([UsersEffects])\n  ],\n  declarations: [LoginComponent],\n  providers: [UsersFacade]\n})\nexport class UsersModule {}\n"],"sourceRoot":"webpack:///"}